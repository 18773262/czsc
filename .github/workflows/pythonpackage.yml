# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# Using UV for modern Python package management

name: Test & Lint

on:
  push:
    branches: [ master, 'V0.9.68' ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml2-dev libxslt-dev

    - name: Install project dependencies
      run: |
        uv sync --extra all

    - name: Check project can be imported
      run: |
        uv run python -c "import czsc; print(f'CZSC version: {czsc.__version__}')"

    - name: Run tests with pytest
      run: |
        uv run pytest test/ -v --cov=czsc --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false



  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync

    - name: Build package
      run: uv build

    - name: Check package metadata
      run: |
        uv add --dev twine
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7
